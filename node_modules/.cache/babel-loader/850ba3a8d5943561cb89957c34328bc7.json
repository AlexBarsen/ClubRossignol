{"ast":null,"code":"var _jsxFileName = \"/Users/barsen/Documents/WebDevelopment/ClubRossignolNew/client/src/components/oldProj/rental-modal/rental-modal.component.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport uuid from \"react-uuid\";\nimport { connect } from \"react-redux\";\nimport { DateRange } from \"react-date-range\";\nimport RentalModalSelectTypes from \"../rental-modal-selectTypes/rental-modal-selectTypes.component\";\nimport RentalModalInfo from \"../rental-modal-info/rental-modal-info.component\";\nimport \"react-date-range/dist/styles.css\"; // * main css file\n\nimport \"react-date-range/dist/theme/default.css\"; // * theme css file\n\nimport { addItem } from \"../../../redux/cart/cart.actions\";\nimport FormInput from \"../form-input/form-input.component\";\nimport CustomButton from \"../custom-button/custom-button.component\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst RentalModal = ({\n  addItem,\n  item\n}) => {\n  _s();\n\n  const {\n    name,\n    price,\n    productType\n  } = item;\n  const [modalInputs, setModalInputs] = useState({\n    firstName: \"\",\n    lastName: \"\",\n    sex: \"\",\n    height: \"\",\n    weight: \"\",\n    shoeSize: \"\",\n    experience: \"\"\n  });\n  const [modalVisibility, setModalVisibility] = useState(false);\n  const [dateRange, setDateRange] = useState({\n    startDate: new Date(new Date().setDate(new Date().getDate() + 1)),\n    endDate: new Date(new Date().setDate(new Date().getDate() + 1)),\n    key: \"selection\"\n  }); // * get date in DD/MM/YYYY format\n\n  const transformDate = date => {\n    const startDay = date.getDate();\n    const startMonth = date.getMonth() + 1;\n    const startYear = date.getFullYear();\n    return startDay + \"/\" + startMonth + \"/\" + startYear;\n  }; // * custom configuration for the Date\n\n\n  const oneDay = 24 * 60 * 60 * 1000;\n  const startDate = dateRange.startDate;\n  const endDate = dateRange.endDate;\n  const startDateShort = transformDate(dateRange.startDate);\n  const endDateShort = transformDate(dateRange.endDate);\n  const days = Math.round(Math.abs((endDate - startDate) / oneDay)) + 1; // * toggle visible OR hidden Modal depeding on the state\n\n  const toggleModal = () => {\n    setModalVisibility(!modalVisibility);\n\n    if (modalVisibility) {\n      document.body.style.overflow = \"unset\";\n    } else {\n      document.body.style.overflow = \"hidden\";\n    }\n  };\n\n  const handleChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setModalInputs({ ...modalInputs,\n      [name]: value\n    });\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    toggleModal(); // * pass state into item\n\n    const orderItem = {\n      name: name,\n      price: price,\n      id: uuid(),\n      productType: productType,\n      ...modalInputs,\n      startDate: dateRange.startDate,\n      endDate: dateRange.endDate,\n      startDateShort: startDateShort,\n      endDateShort: endDateShort,\n      days: Math.round(Math.abs((startDate - endDate) / oneDay)) + 1\n    };\n    addItem(orderItem);\n    setModalInputs({\n      firstName: \"\",\n      lastName: \"\",\n      sex: \"\",\n      height: \"\",\n      weight: \"\",\n      shoeSize: \"\",\n      experience: \"\"\n    });\n  }; // * function which updates the state for the \"react-select\" <Select>\n\n\n  const onChangeInput = (selected, props) => {\n    switch (props.name) {\n      case \"height\":\n        setModalInputs({ ...modalInputs,\n          height: selected.value\n        });\n        break;\n\n      case \"weight\":\n        setModalInputs({ ...modalInputs,\n          weight: selected.value\n        });\n        break;\n\n      case \"shoeSize\":\n        setModalInputs({ ...modalInputs,\n          shoeSize: selected.value\n        });\n        break;\n\n      case \"experience\":\n        setModalInputs({ ...modalInputs,\n          experience: selected.value\n        });\n        break;\n\n      case \"sex\":\n        setModalInputs({ ...modalInputs,\n          sex: selected.value\n        });\n        break;\n\n      default:\n        break;\n    }\n  }; // * set the state regarding the selected dates by the user\n\n\n  const handleRangeChange = newRangeSelection => {\n    const newRange = newRangeSelection.selection;\n    setDateRange({ ...newRange\n    });\n  };\n\n  const {\n    firstName,\n    lastName\n  } = modalInputs;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(CustomButton, {\n      addToCart: true,\n      onClick: toggleModal,\n      children: \"ALEGE\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }, this), modalVisibility && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal__overlay\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal__content\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: item.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          style: {\n            position: \"relative\"\n          },\n          onSubmit: handleSubmit,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"modal__wrapper-all\",\n            children: [/*#__PURE__*/_jsxDEV(DateRange, {\n              className: \"modal__date-range\",\n              editableDateInputs: false,\n              onInit: handleRangeChange,\n              ranges: [dateRange],\n              onChange: handleRangeChange,\n              minDate: new Date(new Date().setDate(new Date().getDate() + 1)),\n              showDateDisplay: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"modal__wrapper-right\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"modal__rental-info\",\n                children: [/*#__PURE__*/_jsxDEV(FormInput, {\n                  className: \"modal__rental-info--input\",\n                  name: \"firstName\",\n                  type: \"text\",\n                  label: \"Nume\",\n                  value: firstName,\n                  onChange: handleChange,\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 165,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n                  className: \"modal__rental-info--input\",\n                  name: \"lastName\",\n                  type: \"text\",\n                  label: \"Prenume\",\n                  value: lastName,\n                  onChange: handleChange,\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 174,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(RentalModalSelectTypes, {\n                  productType: productType,\n                  onChangeInput: onChangeInput.bind(this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 184,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 164,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(RentalModalInfo, {\n                startDate: startDateShort,\n                endDate: endDateShort,\n                days: days\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 190,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(CustomButton, {\n                addToCart: true,\n                type: \"submit\",\n                children: \"ADAUGA IN COS\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 196,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(CustomButton, {\n          closeModal: true,\n          onClick: toggleModal,\n          children: \"\\u274C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}; // * dispatch function to the Redux store\n\n\n_s(RentalModal, \"iotPb1J9nAcMiAQz2F+Tc2G7u4k=\");\n\n_c = RentalModal;\n\nconst mapDispatchToProps = dispatch => ({\n  addItem: item => dispatch(addItem(item))\n});\n\nexport default connect(null, mapDispatchToProps)(RentalModal);\n\nvar _c;\n\n$RefreshReg$(_c, \"RentalModal\");","map":{"version":3,"sources":["/Users/barsen/Documents/WebDevelopment/ClubRossignolNew/client/src/components/oldProj/rental-modal/rental-modal.component.jsx"],"names":["React","useState","uuid","connect","DateRange","RentalModalSelectTypes","RentalModalInfo","addItem","FormInput","CustomButton","RentalModal","item","name","price","productType","modalInputs","setModalInputs","firstName","lastName","sex","height","weight","shoeSize","experience","modalVisibility","setModalVisibility","dateRange","setDateRange","startDate","Date","setDate","getDate","endDate","key","transformDate","date","startDay","startMonth","getMonth","startYear","getFullYear","oneDay","startDateShort","endDateShort","days","Math","round","abs","toggleModal","document","body","style","overflow","handleChange","event","value","target","handleSubmit","preventDefault","orderItem","id","onChangeInput","selected","props","handleRangeChange","newRangeSelection","newRange","selection","position","bind","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport uuid from \"react-uuid\";\nimport { connect } from \"react-redux\";\nimport { DateRange } from \"react-date-range\";\n\nimport RentalModalSelectTypes from \"../rental-modal-selectTypes/rental-modal-selectTypes.component\";\n\nimport RentalModalInfo from \"../rental-modal-info/rental-modal-info.component\";\n\nimport \"react-date-range/dist/styles.css\"; // * main css file\nimport \"react-date-range/dist/theme/default.css\"; // * theme css file\n\nimport { addItem } from \"../../../redux/cart/cart.actions\";\n\nimport FormInput from \"../form-input/form-input.component\";\nimport CustomButton from \"../custom-button/custom-button.component\";\n\nconst RentalModal = ({ addItem, item }) => {\n  const { name, price, productType } = item;\n\n  const [modalInputs, setModalInputs] = useState({\n    firstName: \"\",\n    lastName: \"\",\n    sex: \"\",\n    height: \"\",\n    weight: \"\",\n    shoeSize: \"\",\n    experience: \"\",\n  });\n\n  const [modalVisibility, setModalVisibility] = useState(false);\n\n  const [dateRange, setDateRange] = useState({\n    startDate: new Date(new Date().setDate(new Date().getDate() + 1)),\n    endDate: new Date(new Date().setDate(new Date().getDate() + 1)),\n    key: \"selection\",\n  });\n\n  // * get date in DD/MM/YYYY format\n  const transformDate = (date) => {\n    const startDay = date.getDate();\n    const startMonth = date.getMonth() + 1;\n    const startYear = date.getFullYear();\n    return startDay + \"/\" + startMonth + \"/\" + startYear;\n  };\n\n  // * custom configuration for the Date\n  const oneDay = 24 * 60 * 60 * 1000;\n  const startDate = dateRange.startDate;\n  const endDate = dateRange.endDate;\n  const startDateShort = transformDate(dateRange.startDate);\n  const endDateShort = transformDate(dateRange.endDate);\n  const days = Math.round(Math.abs((endDate - startDate) / oneDay)) + 1;\n\n  // * toggle visible OR hidden Modal depeding on the state\n  const toggleModal = () => {\n    setModalVisibility(!modalVisibility);\n\n    if (modalVisibility) {\n      document.body.style.overflow = \"unset\";\n    } else {\n      document.body.style.overflow = \"hidden\";\n    }\n  };\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n\n    setModalInputs({ ...modalInputs, [name]: value });\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n\n    toggleModal();\n\n    // * pass state into item\n    const orderItem = {\n      name: name,\n      price: price,\n      id: uuid(),\n      productType: productType,\n      ...modalInputs,\n      startDate: dateRange.startDate,\n      endDate: dateRange.endDate,\n      startDateShort: startDateShort,\n      endDateShort: endDateShort,\n      days: Math.round(Math.abs((startDate - endDate) / oneDay)) + 1,\n    };\n\n    addItem(orderItem);\n\n    setModalInputs({\n      firstName: \"\",\n      lastName: \"\",\n      sex: \"\",\n      height: \"\",\n      weight: \"\",\n      shoeSize: \"\",\n      experience: \"\",\n    });\n  };\n\n  // * function which updates the state for the \"react-select\" <Select>\n  const onChangeInput = (selected, props) => {\n    switch (props.name) {\n      case \"height\":\n        setModalInputs({ ...modalInputs, height: selected.value });\n        break;\n      case \"weight\":\n        setModalInputs({ ...modalInputs, weight: selected.value });\n        break;\n      case \"shoeSize\":\n        setModalInputs({ ...modalInputs, shoeSize: selected.value });\n        break;\n      case \"experience\":\n        setModalInputs({ ...modalInputs, experience: selected.value });\n        break;\n      case \"sex\":\n        setModalInputs({ ...modalInputs, sex: selected.value });\n        break;\n      default:\n        break;\n    }\n  };\n\n  // * set the state regarding the selected dates by the user\n  const handleRangeChange = (newRangeSelection) => {\n    const newRange = newRangeSelection.selection;\n\n    setDateRange({ ...newRange });\n  };\n\n  const { firstName, lastName } = modalInputs;\n\n  return (\n    <>\n      <CustomButton addToCart onClick={toggleModal}>\n        ALEGE\n      </CustomButton>\n\n      {/* render Modal depending on the state */}\n      {modalVisibility && (\n        <div className=\"modal\">\n          <div className=\"modal__overlay\"></div>\n          <div className=\"modal__content\">\n            <h2>{item.name}</h2>\n\n            <form style={{ position: \"relative\" }} onSubmit={handleSubmit}>\n              <div className=\"modal__wrapper-all\">\n                <DateRange\n                  className=\"modal__date-range\"\n                  editableDateInputs={false}\n                  onInit={handleRangeChange}\n                  ranges={[dateRange]}\n                  onChange={handleRangeChange}\n                  minDate={\n                    new Date(new Date().setDate(new Date().getDate() + 1))\n                  }\n                  showDateDisplay={true}\n                />\n\n                <div className=\"modal__wrapper-right\">\n                  <div className=\"modal__rental-info\">\n                    <FormInput\n                      className=\"modal__rental-info--input\"\n                      name=\"firstName\"\n                      type=\"text\"\n                      label=\"Nume\"\n                      value={firstName}\n                      onChange={handleChange}\n                      required\n                    />\n                    <FormInput\n                      className=\"modal__rental-info--input\"\n                      name=\"lastName\"\n                      type=\"text\"\n                      label=\"Prenume\"\n                      value={lastName}\n                      onChange={handleChange}\n                      required\n                    />\n\n                    <RentalModalSelectTypes\n                      productType={productType}\n                      onChangeInput={onChangeInput.bind(this)}\n                    />\n                  </div>\n\n                  <RentalModalInfo\n                    startDate={startDateShort}\n                    endDate={endDateShort}\n                    days={days}\n                  />\n\n                  <CustomButton addToCart type=\"submit\">\n                    ADAUGA IN COS\n                  </CustomButton>\n                </div>\n              </div>\n            </form>\n            <CustomButton closeModal onClick={toggleModal}>\n              ❌\n            </CustomButton>\n          </div>\n        </div>\n      )}\n    </>\n  );\n};\n\n// * dispatch function to the Redux store\nconst mapDispatchToProps = (dispatch) => ({\n  addItem: (item) => dispatch(addItem(item)),\n});\n\nexport default connect(null, mapDispatchToProps)(RentalModal);\n"]},"metadata":{},"sourceType":"module"}