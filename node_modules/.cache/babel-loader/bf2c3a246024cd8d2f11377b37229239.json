{"ast":null,"code":"import { takeLatest, put, call, all } from \"@redux-saga/core/effects\";\nimport { auth, createUserProfileDocument, getCurrentUser } from \"../../firebase/firebase.utils\";\nimport { signInSuccess, signInFailure, signOutSuccess, signOutFailure, signUpFailure, signUpSuccess } from \"./user.actions\";\nimport { UserActionTypes } from \"./user.types\"; // * other functionality\n\nexport function* getSnapshotFromUserAuth(userAuth, additionalData) {\n  try {\n    const userRef = yield call(createUserProfileDocument, // * returns user reference\n    userAuth, additionalData);\n    const userSnapshot = yield userRef.get(); // * get userSnapshot\n\n    yield put(signInSuccess({\n      id: userSnapshot.id,\n      ...userSnapshot.data()\n    }));\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* isUserAuthenticated() {\n  try {\n    const userAuth = yield getCurrentUser(); // * returns null or obj\n\n    if (!userAuth) return;\n    yield getSnapshotFromUserAuth(userAuth); // * return userSnapshot\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n} // * signUp\n\nexport function* emailSignUp({\n  payload: {\n    email,\n    password,\n    firstName,\n    lastName,\n    phone\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield auth.createUserWithEmailAndPassword(email, password);\n    yield put(signUpSuccess({\n      user,\n      additionalData: {\n        firstName,\n        lastName,\n        phone\n      }\n    }));\n  } catch (error) {\n    yield put(signUpFailure(error));\n  }\n}\nexport function* signInAfterSignUp({\n  payload: {\n    user,\n    additionalData\n  }\n}) {\n  yield getSnapshotFromUserAuth(user, additionalData);\n} // * signIn\n\nexport function* signInWithEmail({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield auth.signInWithEmailAndPassword(email, password);\n    yield getSnapshotFromUserAuth(user); // *return userSnapshot\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n} // *signOut\n\nexport function* signOut() {\n  try {\n    yield auth.signOut();\n    yield put(signOutSuccess());\n  } catch (error) {\n    yield put(signOutFailure(error));\n  }\n} // * generator functions catch the dispatches and fire other functions*\n\nexport function* onEmailSignInStart() {\n  yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\n}\nexport function* onCheckUserSession() {\n  yield takeLatest(UserActionTypes.CHECK_USER_SESSION, isUserAuthenticated);\n}\nexport function* onSignOutStart() {\n  yield takeLatest(UserActionTypes.SIGN_OUT_START, signOut);\n}\nexport function* onSignUpStart() {\n  yield takeLatest(UserActionTypes.EMAIL_SIGN_UP_START, emailSignUp);\n} // * SignIn the user after SignUp\n\nexport function* onSignUpSuccess() {\n  yield takeLatest(UserActionTypes.SIGN_UP_SUCCESS, signInAfterSignUp);\n} // * export userSagas functions()\n\nexport function* userSagas() {\n  yield all([call(onEmailSignInStart), call(isUserAuthenticated), call(onSignOutStart), call(onSignUpStart), call(onSignUpSuccess)]);\n}","map":{"version":3,"sources":["/Users/barsen/Documents/WebDevelopment/ClubRossignolNew/client/src/redux/user/user.sagas.js"],"names":["takeLatest","put","call","all","auth","createUserProfileDocument","getCurrentUser","signInSuccess","signInFailure","signOutSuccess","signOutFailure","signUpFailure","signUpSuccess","UserActionTypes","getSnapshotFromUserAuth","userAuth","additionalData","userRef","userSnapshot","get","id","data","error","isUserAuthenticated","emailSignUp","payload","email","password","firstName","lastName","phone","user","createUserWithEmailAndPassword","signInAfterSignUp","signInWithEmail","signInWithEmailAndPassword","signOut","onEmailSignInStart","EMAIL_SIGN_IN_START","onCheckUserSession","CHECK_USER_SESSION","onSignOutStart","SIGN_OUT_START","onSignUpStart","EMAIL_SIGN_UP_START","onSignUpSuccess","SIGN_UP_SUCCESS","userSagas"],"mappings":"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","sourcesContent":["import { takeLatest, put, call, all } from \"@redux-saga/core/effects\";\nimport {\n  auth,\n  createUserProfileDocument,\n  getCurrentUser,\n} from \"../../firebase/firebase.utils\";\n\nimport {\n  signInSuccess,\n  signInFailure,\n  signOutSuccess,\n  signOutFailure,\n  signUpFailure,\n  signUpSuccess,\n} from \"./user.actions\";\nimport { UserActionTypes } from \"./user.types\";\n\n// * other functionality\nexport function* getSnapshotFromUserAuth(userAuth, additionalData) {\n  try {\n    const userRef = yield call(\n      createUserProfileDocument, // * returns user reference\n      userAuth,\n      additionalData\n    );\n\n    const userSnapshot = yield userRef.get(); // * get userSnapshot\n\n    yield put(signInSuccess({ id: userSnapshot.id, ...userSnapshot.data() }));\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\n\nexport function* isUserAuthenticated() {\n  try {\n    const userAuth = yield getCurrentUser(); // * returns null or obj\n\n    if (!userAuth) return;\n\n    yield getSnapshotFromUserAuth(userAuth); // * return userSnapshot\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\n\n// * signUp\nexport function* emailSignUp({\n  payload: { email, password, firstName, lastName, phone },\n}) {\n  try {\n    const { user } = yield auth.createUserWithEmailAndPassword(email, password);\n\n    yield put(\n      signUpSuccess({ user, additionalData: { firstName, lastName, phone } })\n    );\n  } catch (error) {\n    yield put(signUpFailure(error));\n  }\n}\n\nexport function* signInAfterSignUp({ payload: { user, additionalData } }) {\n  yield getSnapshotFromUserAuth(user, additionalData);\n}\n\n// * signIn\nexport function* signInWithEmail({ payload: { email, password } }) {\n  try {\n    const { user } = yield auth.signInWithEmailAndPassword(email, password);\n\n    yield getSnapshotFromUserAuth(user); // *return userSnapshot\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\n\n// *signOut\nexport function* signOut() {\n  try {\n    yield auth.signOut();\n\n    yield put(signOutSuccess());\n  } catch (error) {\n    yield put(signOutFailure(error));\n  }\n}\n\n// * generator functions catch the dispatches and fire other functions*\nexport function* onEmailSignInStart() {\n  yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\n}\n\nexport function* onCheckUserSession() {\n  yield takeLatest(UserActionTypes.CHECK_USER_SESSION, isUserAuthenticated);\n}\n\nexport function* onSignOutStart() {\n  yield takeLatest(UserActionTypes.SIGN_OUT_START, signOut);\n}\n\nexport function* onSignUpStart() {\n  yield takeLatest(UserActionTypes.EMAIL_SIGN_UP_START, emailSignUp);\n}\n\n// * SignIn the user after SignUp\nexport function* onSignUpSuccess() {\n  yield takeLatest(UserActionTypes.SIGN_UP_SUCCESS, signInAfterSignUp);\n}\n\n// * export userSagas functions()\nexport function* userSagas() {\n  yield all([\n    call(onEmailSignInStart),\n    call(isUserAuthenticated),\n    call(onSignOutStart),\n    call(onSignUpStart),\n    call(onSignUpSuccess),\n  ]);\n}\n"]},"metadata":{},"sourceType":"module"}