{"ast":null,"code":"// * middlewares catch actions and does something with them when they get fired/dispatched\nimport { createStore, applyMiddleware } from \"redux\"; // * logger = middleware that catches the actions and console.logs it\n\nimport logger from \"redux-logger\";\nimport rootSaga from \"./root-saga\";\nimport createSagaMiddleware from \"redux-saga\"; // import thunk from \"redux-thunk\";\n\nimport rootReducer from \"./root-reducer\";\nimport { persistStore } from \"redux-persist\";\nconst sagaMiddleware = createSagaMiddleware();\nconst middlewares = [logger, sagaMiddleware]; // * creating store with rootReducer and middlewares\n\nexport const store = createStore(rootReducer, applyMiddleware(...middlewares)); // * inside run() are passed in the 'sagas' that are written\n\nsagaMiddleware.run(rootSaga); // * persisted version of store\n\nexport const persistor = persistStore(store);","map":{"version":3,"sources":["/Users/barsen/Documents/WebDevelopment/ClubRossignolNew/client/src/redux/store.js"],"names":["createStore","applyMiddleware","logger","rootSaga","createSagaMiddleware","rootReducer","persistStore","sagaMiddleware","middlewares","store","run","persistor"],"mappings":"AAAA;AACA,SAASA,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C,C,CAEA;;AACA,OAAOC,MAAP,MAAmB,cAAnB;AAEA,OAAOC,QAAP,MAAqB,aAArB;AAEA,OAAOC,oBAAP,MAAiC,YAAjC,C,CAEA;;AAEA,OAAOC,WAAP,MAAwB,gBAAxB;AACA,SAASC,YAAT,QAA6B,eAA7B;AAEA,MAAMC,cAAc,GAAGH,oBAAoB,EAA3C;AAEA,MAAMI,WAAW,GAAG,CAACN,MAAD,EAASK,cAAT,CAApB,C,CAEA;;AACA,OAAO,MAAME,KAAK,GAAGT,WAAW,CAACK,WAAD,EAAcJ,eAAe,CAAC,GAAGO,WAAJ,CAA7B,CAAzB,C,CAEP;;AACAD,cAAc,CAACG,GAAf,CAAmBP,QAAnB,E,CAEA;;AACA,OAAO,MAAMQ,SAAS,GAAGL,YAAY,CAACG,KAAD,CAA9B","sourcesContent":["// * middlewares catch actions and does something with them when they get fired/dispatched\nimport { createStore, applyMiddleware } from \"redux\";\n\n// * logger = middleware that catches the actions and console.logs it\nimport logger from \"redux-logger\";\n\nimport rootSaga from \"./root-saga\";\n\nimport createSagaMiddleware from \"redux-saga\";\n\n// import thunk from \"redux-thunk\";\n\nimport rootReducer from \"./root-reducer\";\nimport { persistStore } from \"redux-persist\";\n\nconst sagaMiddleware = createSagaMiddleware();\n\nconst middlewares = [logger, sagaMiddleware];\n\n// * creating store with rootReducer and middlewares\nexport const store = createStore(rootReducer, applyMiddleware(...middlewares));\n\n// * inside run() are passed in the 'sagas' that are written\nsagaMiddleware.run(rootSaga);\n\n// * persisted version of store\nexport const persistor = persistStore(store);\n"]},"metadata":{},"sourceType":"module"}